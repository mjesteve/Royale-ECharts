<?xml version="1.0" encoding="utf-8"?>
<j:ScrollableSectionContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
    implements="com.proj.example.charts.IEchartExampleBasic"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:js="library://ns.apache.org/royale/basic"
    xmlns:html="library://ns.apache.org/royale/html"
    xmlns:views="com.proj.example.views.*" 
    xmlns:localecharts="com.proj.example.echarts.*"
    xmlns:beads="com.proj.example.echarts.beads.*"
    initComplete="onInitComplete()">

    <fx:Script>
        <![CDATA[
        import com.proj.example.vos.ChartDefExampleVO;
        import com.proj.example.echarts.events.EChartsEvent;

        private function onInitComplete():void{
            this.addEventListener("sizeChanged", autoResizeHandler,false);
        }
        public function autoResizeHandler(event:Event = null):void
        {
            if(charComp.isInit)            
                charComp.resize();
        }

        private var _itemChartDef:ChartDefExampleVO;    
        [Bindable]
		public function get itemChartDef():ChartDefExampleVO
        {
            return _itemChartDef;
        }
        public function set itemChartDef(value:ChartDefExampleVO):void
        {            
            _itemChartDef = value;
            if(_itemChartDef)            
            {
                listTheme.setSelectedItemFromName(_itemChartDef.themeName);
                btnLoad.visible = !_itemChartDef.autoLoad;
                listTheme.visible = _itemChartDef.autoLoad;
            }else{                
                btnLoad.visible = listTheme.visible = false;
            }
        }
        
        [Bindable]
        private var opts:Object = {width: 'auto', height: 'auto'};

        public function activate():void
        {
            trace("IsInit",charComp.isInit,"IsConfig",charComp.isConfigure,"autoload",charComp.autoLoad);
            var requestInitialize:Boolean = (!charComp.isInit);
            var requestConfig:Boolean = (!charComp.isConfigure);
            var adjustSize:Boolean = true;

            if(!charComp.isInit || !charComp.isConfigure)
            {
                if(charComp.autoLoad)
                    charComp.refreshOption(requestInitialize,requestConfig,adjustSize);                
            }else{            
                charComp.refreshOption(requestInitialize,requestConfig,adjustSize);
            }

            trace(charComp.instanceECharts);
        }

        private function initialize():void
        {
            charComp.refreshOption(true,true,true);
        }

        private function completeInitHandler(event:EChartsEvent):void
        {
            listTheme.visible = charComp.isInit;
            btnLoad.visible = !charComp.isInit; 
        }

        public function theme_Change():void
        {            
            if(_itemChartDef && charComp.themeName == listTheme.selectedItem.themeName)
                return;
            if( listTheme.selectedItem.isReg )
            {
                charComp.UpdateTheme(listTheme.selectedItem.themeName);
            }
        }

        [Bindable]
        private var dataHighlightIndex:int=-1;

        public function hightLightHandler(... event):void{

            var param:Object = event?event[0]:null;
            if(!param)
                return;

        }

        public function select():void
        {
            var id:int = nDataIndex.value;
            trace(id, dataHighlightIndex);
            charComp.dispatchAction({type:EChartsEvent.ACTION_SUNBURST_HIGHLIGHT, targetNodeId:'5â˜†'});

        }

        public function reset():void
        {
            charComp.dispatchAction({type:EChartsEvent.ACTION_SUNBURST_UNHIGHLIGHT});
        }

        public function clickChartHandler(... event):void{
            trace('click');
            var param:Object = event?event[0]:null;
            if(!param)
                return;
            trace('componentType',param.componentType);
            trace('seriesId',param.seriesId);
            trace('seriesIndex',param.seriesIndex);
            trace('seriesName',param.seriesName);
            trace('seriesType',param.seriesType);
            trace('dataIndex',param.dataIndex);
            trace('value',param.value);
            trace('treePathInfo',param.treePathInfo);
        }

        /*
        public function pieSelectChangedChartHandler(... event):void{
            trace('pieSelectChangedChartHandler');
            return;
            var param:Object = event?event[0]:null;
            if(!param)
                return;
        }*/
        ]]>
    </fx:Script>
    
    <j:beads>
        <js:ViewDataBinding/>
		<js:BrowserResizeListener/>
    </j:beads>
    <j:Card itemsExpand="false" percentHeight="100" percentWidth="100">
        <j:CardHeader>
            <j:BarSection width="70%" gap="5">
                <html:H3 text="{itemChartDef.title}" className="block-with-text primary-dark"/>
                <html:H5 text="{itemChartDef.subtitle}" className="block-with-text primary-dark"/>
            </j:BarSection>
            <j:BarSection width="30%" itemsHorizontalAlign="itemsRight" gap="0" itemsVerticalAlign="itemsCenter">                
                <views:SelectThemeList id="listTheme" onlyThemesNative="true" change="theme_Change()"/>
                <j:IconButton localId="btnLoad" unboxed="true" click="initialize()">
                    <j:icon>
                        <js:FontAwesomeIcon text="{FontAwesome5IconType.SYNC}" faStyle="{FontAwesomeIcon.REGULAR}" relativeSize="{FontAwesomeIcon.SIZE_LG}"/>
                    </j:icon>
                    <j:beads>
                        <j:ToolTip toolTip="Load"/>
                    </j:beads>
                </j:IconButton>
            </j:BarSection>
        </j:CardHeader>

        <j:CardPrimaryContent itemsVerticalAlign="itemsCenter" itemsHorizontalAlign="itemsCenter">
            <j:HGroup percentWidth="100" percentHeight="100" itemsHorizontalAlign="itemsLeft" itemsVerticalAlign="itemsTop">                
                <localecharts:EChartsWithThemeControl localId="charComp" height="100%" width="100%"
                                                    autoLoad="{itemChartDef.autoLoad}" configOption="{itemChartDef.optionChartInit}" 
                                                    optsInstance="{this.opts}" themeName="{itemChartDef.themeName}"
                                                    onCompleteInicialize="completeInitHandler(event)">
                    <localecharts:beads>
                        <beads:EChartEventsBead CLICK="clickChartHandler" SUNBURSTHIGHLIGHT="hightLightHandler" />
                    </localecharts:beads>
                </localecharts:EChartsWithThemeControl>
                <j:VContainer width="100" percentHeight="100">
                    <j:NumericStepper localId="nDataIndex" minimum="-1" maximum="34" width="100%" 
                                    value="{dataHighlightIndex}"
                                    valueChange="select()" />
                    <j:IconButton unboxed="true" click="reset()">
                        <j:icon>
                            <js:FontAwesomeIcon text="{FontAwesome5IconType.SYNC}" faStyle="{FontAwesomeIcon.REGULAR}" relativeSize="{FontAwesomeIcon.SIZE_LG}"/>
                        </j:icon>
                        <j:beads>
                            <j:ToolTip toolTip="Load"/>
                        </j:beads>
                    </j:IconButton>
                </j:VContainer>
            </j:HGroup>
        </j:CardPrimaryContent>

    </j:Card> 
</j:ScrollableSectionContent>
