<?xml version="1.0" encoding="utf-8"?>
<j:ScrollableSectionContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
    implements="com.proj.example.charts.IEchartExampleBasic"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:js="library://ns.apache.org/royale/basic"
    xmlns:html="library://ns.apache.org/royale/html"
    xmlns:views="com.proj.example.views.*" 
    xmlns:localecharts="echarts.*"
    xmlns:beads="echarts.beads.*"
    initComplete="onInitComplete()">

    <fx:Metadata>
        [Event(name="close", type="org.apache.royale.events.Event")]
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
        import com.proj.example.vos.ChartDefExampleVO;
        import echarts.events.EChartsEvent;
        import org.apache.royale.collections.ArrayList;

        private function onInitComplete():void{
            this.addEventListener("sizeChanged", autoResizeHandler,false);
        }
        public function autoResizeHandler(event:Event = null):void
        {
            if(charComp.isInit)
            {
                charComp.resize();
            }
        }

        private var _itemChartDef:ChartDefExampleVO;    
        [Bindable]
		public function get itemChartDef():ChartDefExampleVO
        {
            return _itemChartDef;
        }
        public function set itemChartDef(value:ChartDefExampleVO):void
        {            
            _itemChartDef = value;
        }

        public function get allDesktop():Boolean
        {
            return true;
        }

        [Bindable]
        private var dpNodes:ArrayList;

        [Bindable]
        private var opts:Object = {width: 'auto', height: 'auto'};

        public function activate():void
        {
            if(!charComp.isConfigure && !charComp.autoLoad)
                return;

            var requestInitialize:Boolean = (!charComp.isInit);
            if(requestInitialize){
                //First initialization                
                echarts.registerMap(_itemChartDef.nameMap, _itemChartDef.registerMap);
                charComp.refreshOption(requestInitialize, true, true);
                
            }else
                autoResizeHandler();
        }

        private function completConfigHandler(event:EChartsEvent):void
        {
            
        }

        private function resetLabels(onlyDet:Boolean = false):void
        {            
            
        }

        ]]>
    </fx:Script>
    
    <j:beads>
        <js:ViewDataBinding/>
		<js:BrowserResizeListener/>
    </j:beads>
    <j:Card itemsExpand="false" percentHeight="100" percentWidth="100">
        <j:CardHeader>
            <j:BarSection width="100%" gap="10">
                <html:H3 text="{itemChartDef.title}" className="block-with-text primary-dark"/>
                <html:H5 text="{itemChartDef.subtitle}" className="block-with-text primary-dark"/>
            </j:BarSection>
            <j:BarSection width="30%" itemsHorizontalAlign="itemsRight" gap="0" itemsVerticalAlign="itemsCenter">     
                <j:IconButton localId="btnLoad" unboxed="true" click="{dispatchEvent(new Event('close'));}" >
                    <j:icon>
                        <js:FontAwesomeIcon text="{FontAwesome5IconType.CHEVRON_CIRCLE_LEFT}" faStyle="{FontAwesomeIcon.REGULAR}" relativeSize="{FontAwesomeIcon.SIZE_LG}"/>
                    </j:icon>
                    <j:beads>
                        <j:ToolTip toolTip="Back"/>
                    </j:beads>
                </j:IconButton>
            </j:BarSection>
        </j:CardHeader>

        <j:CardPrimaryContent >
            <j:HGroup percentWidth="100" percentHeight="100" gap="10" itemsHorizontalAlign="itemsLeft" itemsVerticalAlign="itemsTop">                
                <localecharts:EChartsBasicControl localId="charComp" height="100%" width="100%"
                                                    autoLoad="{itemChartDef.autoLoad}" configOption="{itemChartDef.optionChartInit}" 
                                                    optsInstance="{this.opts}" themeName="{itemChartDef.themeName}"
                                                    onCompleteConfig="completConfigHandler(event)"
                                                    onUpdateConfig="completConfigHandler(event)"/>
<!--
                <j:VContainer gap="5" width="15%" height="100%">
                    
                    <j:HGroup gap="5" width="100%" itemsVerticalAlign="itemsCenter">

                        <j:DropDownList localId="cbRootNode" percentWidth="100" 
                            dataProvider="{dpNodes}" labelField="label" >
                            <j:beads>
                                <j:DropDownListTextPrompt prompt="Root To Node..."/>
                            </j:beads>
                        </j:DropDownList>
                        
                        <j:IconButton unboxed="true">
                            <j:icon>
                                <js:FontAwesomeIcon text="{FontAwesome5IconType.SYNC}" faStyle="{FontAwesomeIcon.REGULAR}" relativeSize="{FontAwesomeIcon.SIZE_LG}"/>
                            </j:icon>
                            <j:beads>
                                <j:ToolTip toolTip="Reset"/>
                            </j:beads>
                        </j:IconButton>
                    </j:HGroup>

                </j:VContainer>
-->
            </j:HGroup>
        </j:CardPrimaryContent>

    </j:Card> 
</j:ScrollableSectionContent>
