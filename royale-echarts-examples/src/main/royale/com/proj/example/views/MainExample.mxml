<?xml version="1.0" encoding="utf-8"?>
<j:ResponsiveView xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:js="library://ns.apache.org/royale/basic"
    xmlns:html="library://ns.apache.org/royale/html"
    xmlns:localbeads="com.proj.example.beads.layouts.*"
    xmlns:vos="com.proj.example.vos.*"
	xmlns:models="com.proj.example.models.*"
    xmlns:views="com.proj.example.views.*"
    initComplete="onInitComplete()"
    >

     <fx:Script>
        <![CDATA[
        import com.proj.example.vos.TabBarChartVO;
        import org.apache.royale.jewel.supportClasses.ISelectableContent;
        import com.iest.royale.echarts.vos.EChartsThemeTemplateVO;
        import com.proj.example.charts.IEchartExampleBasic;
	    import org.apache.royale.core.UIBase;

        private function onInitComplete():void{
			//window.addEventListener('resize', autoResizeHandler, false);
            //this.addEventListener("sizeChanged", selectedChart);
            main.selectedContent = "welcome";
            listTheme.setSelectedItemFromName('default-local');
        }

        [Bindable]
        public function get offsetTopBar():Number{
            //The height of the Top Bar is not set correctly, the ApplicationMainContent does not have the Padding-Top either:
            //it assigns 66 (it matches the minHeight of the Top Bar 'has-topappbar') instead of 255.64, the actual height of the Top Bar.
            // trace(topappbar.height.toString());  = 977 (incorrect)
            // trace(topappbar.element.clientTop + topappbar.element.clientHeight); = 240 //(incorrect)
            // trace(barRowHeader.height + barRowContent.height + barRowConfig.height); = 240 //(incorrect)

            //The padding-top that we want to assign is 20. (To be computed from the completion of topappbar)
            //The AplicationMainContent should start at this point
            //var top:Number = 255 - barRowHeader.height + 20;
            //return top + topappbar.element.clientTop;

            /*in CSS
            .has-topappbar {
                padding-top: 250px !important;
            }
            */
            return 20;
        }

        public function selectedChart():void
        {
            var it:TabBarChartVO = (tabbarApp.selectedItem as TabBarChartVO);
            if(!it){
                main.selectedContent = "welcome";
            }else{
                main.selectedContent= it.hash;
				for (var i:int = 0; i < main.numElements; i++)
				{
					var content:ISelectableContent = main.getElementAt(i) as ISelectableContent;
					if(content.isSelected){
                        if(content is IEchartExampleBasic){
                            var cchart:IEchartExampleBasic = content as IEchartExampleBasic;
                            var uiele:UIBase = content as UIBase;
                            if(cchart.allDesktop && topappbar.visible){
                                    topappbar.visible = false;
                                    //topappbar.fixed = false;
                                    main.hasTopAppBar = false;
                                    //uiele.positioner.style.paddingTop = "20px !important";
                            }
                            cchart.activate();
                        }
                        return;
                    }
				}
            }

        }

        private function restoreBar():void
        {
            //var content:ISelectableContent = main.selectedContent as ISelectableContent;
            //main.positioner.style.paddingTop = offsetTopBar.toString() + 'px !important';
            topappbar.visible = true;
            //topappbar.fixed = true;
            main.hasTopAppBar = true;
            main.selectedContent = "welcome";

            //No quita el css del tab seleccionado con anterioridad, le vuelvo a pasar el dataProvider
            //tabbarApp.selectedIndex = -1;
            tabbarApp.dataProvider = appModel.tabBarAppData;
        }

        private var _currentTheme:EChartsThemeTemplateVO;
        [Bindable]
		public function get currentTheme():EChartsThemeTemplateVO{
            return _currentTheme;
        }
		public function set currentTheme(value:EChartsThemeTemplateVO):void
        {
            if(_currentTheme === value)
                return;
            _currentTheme = value;
        }

        public function theme_Change():void
        {
            if(_currentTheme && _currentTheme.themeName == listTheme.selectedItem.themeName)
                return;
            if( !listTheme.selectedItem.isReg )
            {
                //cargar y registrar
            }
            else
            {
                //aplicar tema
            }
			//ecp1.initInstance(listTheme.selectedItem.themeName);
            //ecp2.initInstance(listTheme.selectedItem.themeName);
            selectedChart();
        }

        ]]>
    </fx:Script>

	<j:model>
		<models:ChartsDataModel localId="appModel"/>
	</j:model>

    <j:beads>
		<js:ViewDataBinding/>
		<js:BrowserResizeListener/>
	</j:beads>

    <j:TopAppBar localId="topappbar" fixed="true" visible="true">
        <j:BarRow localId="barRowHeader">
            <j:BarSection gap="0" percentWidth="100">
                <j:BarTitle text="Integrating Apache ECharts into Apache Royale"/>
            </j:BarSection>
        </j:BarRow>
        <j:BarRow localId="barRowContent" style ="height:auto;">
            <j:HGroup gap="0" percentWidth="100" itemsHorizontalAlign="itemsCenter" itemsVerticalAlign="itemsCenter">
                <j:TabBar id="tabbarApp" selectedIndex="-1" sameWidths="true"
                    className="tabbarAppItemRenderer"
                    change="selectedChart()" dataProvider="{appModel.tabBarAppData}">
                </j:TabBar>
            </j:HGroup>
        </j:BarRow>
        <j:BarRow localId="barRowConfig" style ="height:auto;">
            <j:HGroup gap="0" itemsVerticalAlign="itemsCenter">
                <j:beads>
                    <js:Paddings padding="20"/>
                </j:beads>
                <views:SelectThemeList id="listTheme" change="theme_Change()"/>
            </j:HGroup>
        </j:BarRow>
    </j:TopAppBar>

    <j:ApplicationMainContent  localId="main" hasTopAppBar="true">
        <j:beads>
            <js:Paddings padding="20"/>
        </j:beads>
        <!--<views:WelcomeSection name="welcome"/>-->
        <views:EChartsExample_StaticsView name="welcome" localId="welcome"/>
        <views:ECCT_COVIDMAP_EchartsExample_Maps localId="ecp7" name="ecp7"
            itemChartDef="{appModel.ECCT_COVIDMAP_1}" close="restoreBar()"/>
        <views:ECCT_CUSTOM_EChartsExample_Maps localId="ecp6" name="ecp6"
            itemChartDef="{appModel.ECCT_CUSTOM4}" close="restoreBar()"/>
        <views:ECCT_SUNBURST6_DispatchAction localId="ecp0" name="ecp0" itemChartDef="{appModel.ECCT_SUNBURST6}"/>
        <views:EChartsExampleBasic localId="ecp1" name="ecp1" itemChartDef="{appModel.ECCT_PIE001}"/>
        <views:EChartsExampleBasic localId="ecp2" name="ecp2" itemChartDef="{appModel.ECC_PIE002}"/>
        <views:ECCT_CUSTOM1_EChartsExample_Events localId="ecp3" name="ecp3" itemChartDef="{appModel.ECCT_CUSTOM1}"/>
        <views:ECCT_CUSTOM2_EChartsExampleBasic localId="ecp4" name="ecp4" itemChartDef="{appModel.ECCT_CUSTOM2}"/>
        <views:EChartsExampleThemesDefault localId="ecp5" name="ecp5" itemChartDef="{appModel.ECCT_CUSTOM3}"/>
    </j:ApplicationMainContent>


</j:ResponsiveView>